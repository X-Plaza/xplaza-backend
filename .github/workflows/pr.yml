name: PR Pipeline

permissions:
  contents: read
  pull-requests: write

on: pull_request

jobs:
  test_and_coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'sapmachine'
          java-version: '24'

      - name: Run Tests and Generate Coverage Report
        run: mvn test jacoco:report -Dspring.profiles.active=local

      - name: Generate JaCoCo badge and summary
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Comment on PR with Coverage
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          REPORT=$(<badges/coverage-summary.json)
          RAW_COVERAGE=$(jq -r '.coverage' <<< "$REPORT")
          RAW_BRANCHES=$(jq -r '.branches' <<< "$REPORT")

          # Round values
          COVERAGE=$(printf "%.0f" "$RAW_COVERAGE")
          BRANCHES=$(printf "%.0f" "$RAW_BRANCHES")

          # Determine badge colors
          get_badge_color() {
            local percent=$1
            if (( percent >= 90 )); then echo "brightgreen"
            elif (( percent >= 75 )); then echo "yellow"
            elif (( percent >= 50 )); then echo "orange"
            else echo "red"; fi
          }

          COLOR_COV=$(get_badge_color $COVERAGE)
          COLOR_BRANCH=$(get_badge_color $BRANCHES)

          NEWLINE=$'\n'
          BODY="## ðŸ§ª Test Coverage Summary${NEWLINE}"
          BODY+="| Metric     | Coverage |${NEWLINE}"
          BODY+="|------------|----------|${NEWLINE}"
          BODY+="| âœ… **Lines**    | ![Lines](https://img.shields.io/badge/Coverage-${COVERAGE}%25-${COLOR_COV}) |${NEWLINE}"
          BODY+="| âœ… **Branches** | ![Branches](https://img.shields.io/badge/Branches-${BRANCHES}%25-${COLOR_BRANCH}) |"

          gh pr comment ${{ github.event.pull_request.number }} --body "${BODY}" --edit-last --create-if-none
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}